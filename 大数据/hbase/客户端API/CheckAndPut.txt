checkandput 是一个原子方法。
在修改前会比较改前查询值。如果不一样，则不会写，以保证不会发生不一致的写。checkandput 还提供一个CompareOp的参数
：LESS,EQUAL,LESS_OR_EQUAL,GREATER,验证数据是否满足相应的比较条件。

/**
 * @author Administrator
 * @date 2019年12月31日
 *
 */
package learnhbase;

import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.hbase.HBaseConfiguration;
import org.apache.hadoop.hbase.TableName;
import org.apache.hadoop.hbase.client.Connection;
import org.apache.hadoop.hbase.client.ConnectionFactory;
import org.apache.hadoop.hbase.client.Put;
import org.apache.hadoop.hbase.client.Table;
import org.apache.hadoop.hbase.util.Bytes;

/**
 * @author Administrator
 *
 */
public class HelloCheckAndPut {

	/**
	 * @param args
	 * 下午8:39:36
	 * @throws IOException 
	 */
	public static void main(String[] args) 
			throws IOException
	{
		// TODO Auto-generated method stub
		Configuration conf = HBaseConfiguration.create();
		conf.set("hbase.zookeeper.quorum", "oracle-11g:2181"); //连接zookeeper
		Connection conn = ConnectionFactory.createConnection(conf);
		
		Table table = conn.getTable(TableName.valueOf("mytable"));
		Put putData = new Put(Bytes.toBytes("row1"));
		putData.addColumn(Bytes.toBytes("mycf"), Bytes.toBytes("class"),Bytes.toBytes("D"));
		
		boolean result = table.checkAndPut(Bytes.toBytes("row1"), Bytes.toBytes("mycf")
										, Bytes.toBytes("class"),Bytes.toBytes("A"), putData);
		conn.close();
		System.out.println("put data sucessfully:"+result);
		
											
	}

}
